version: '3.8'

x-app: &app
  build:
    context: .
    dockerfile: ./.dockerdev/Dockerfile
    args:
      RUBY_VERSION: '3.1.2'
  image: example-dev:1.1.0

x-backend: &backend
  <<: *app
  stdin_open: true
  tty: true
  volumes:
    - .:/app:cached
    - rails_cache:/app/tmp/cache
    - bundle:/usr/local/bundle
    - node_modules:/app/node_modules
    - packs:/app/public/packs
  environment:
    NODE_ENV: ${NODE_ENV:-development}
    RAILS_ENV: ${RAILS_ENV:-development}
    BOOTSNAP_CACHE_DIR: /usr/local/bundle/_bootsnap
    WEBPACKER_DEV_SERVER_HOST: webpacker
    WEB_CONCURRENCY: 1
    HISTFILE: /app/log/.bash_history
    EDITOR: vi
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres
  depends_on:
    postgres:
      condition: service_healthy

services:
  runner:
    <<: *backend
    command: /bin/bash
 
  rails:
    <<: *backend
    command: bundle exec rails server -b 0.0.0.0 -p 5000
    ports:
      - '5000:5000'

  postgres:
    image: postgres:16.2-alpine3.19
    volumes:
      - .dockerdev/.psqlrc:/root/.psqlrc:ro
      - postgres:/var/lib/postgresql/data
      - ./log:/root/log:cached
    environment:
      PSQL_HISTFILE: /root/log/.psql_history
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    expose:
      - 5432
    ports:
      - 6437:5432
    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1
      interval: 5s

  redis:
    image: redis:6.2-alpine
    ports:
      - '6379:6379'

volumes:
  postgres:
  bundle:
  node_modules:
  rails_cache:
  packs:
